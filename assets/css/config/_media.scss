/* 変数
----------------------------------------------------------------------------- */
// media up
$phoneUp: 480px;
$phoneLargeUp: 600px;
$tabletUp: 960px;
$desktopUp: 1280px;
$pageUp: #{unitStrip($pageMaxWidth) + unitStrip($sideSpace)}px;

// media less
$phoneLess: $phoneUp - 1;
$phoneLargeLess: $phoneLargeUp - 1;
$tabletLess: $tabletUp - 1;
$desktopLess: $desktopUp - 1;
$pageLess: #{unitStrip($pageMaxWidth) + unitStrip($sideSpace) - 1}px;


/* function
----------------------------------------------------------------------------- */
@function mediaSize($media, $target) {
  $mediaUpList: $phoneUp, $phoneLargeUp, $tabletUp, $desktopUp, $pageUp;
  $mediaLessList: $phoneLess, $phoneLargeLess, $tabletLess, $desktopLess, $pageLess;
  $targetList: phone, phoneLarge, tablet, desktop, page;
  $targetIndex: index($targetList, $target);
  @if (type-of($target) == 'number') {
      @return $target + "px";
  } @else {
    @if ($media == 'min') {
      @each $this in $mediaUpList {
        @return nth($mediaUpList, $targetIndex);
      }
    } @else if ($media =='max') {
      @each $this in $mediaLessList {
        @return nth($mediaLessList, $targetIndex);
      }
    }
  }
}

// min-width
@function mediaUp($target) {
  $value: mediaSize("min", $target);
  @return #{"(min-width: " + $value + ")"};
}

// max-width
@function mediaLess($target) {
  $value: mediaSize("max", $target);
  @return #{"(max-width: " + $value + ")"};
}

// min-width and max-width
@function mediaRange($min, $max) {
  $mediaList: $min, $max;
  $minValue: mediaSize("min", $min);
  $maxValue: mediaSize("max", $max);
  @return #{"(min-width: " + $minValue + ") and (max-width: " + $maxValue+ ")"};
}

// usage
// .myClass {
//   @media #{mediaUp(phone)} {
//     ...
//   }
//   @media #{mediaLess(desktop)} {
//     ...
//   }
//   @media #{mediaRange(phoneLarge, tablet)} {
//     ...
//   }
// }
